# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from glob import glob
import random as rd

# 12 arrays
# Scans the drive for images and puts their filepaths into the lists below
allImages = glob("images/*/*")
brainMemeImages = glob("images/brainMeme/*")
bambMemeImages = glob("images/bambyniotisMeme/*")
buttonMemeImages = glob("images/buttonMeme/*")
catMemeImages = glob("images/CatMeme/*")
disasterMemeImages = glob("images/DisasterMeme/*")
drakeMemeImages = glob("images/DrakeMeme/*")
ldMemeImages = glob("images/LDMemes/*")
modernProbMemeImages = glob("images/modernProblemsMeme/*")
monkeyMemeImages = glob("images/MonkeyPuppetMEME/*")
outstandingMemeImages = glob("images/OutstandingMoveMeme/*")
changeMyMindMemeImages = glob("images/changeMyMindMeme/*")

# used for the meme selection dropdown box
memeSelection = ["Completely Random", "Brain Meme", "Bambiniotis Meme", "Button Meme", "Cat Meme", "Disaster Girl Meme",
                 "Drake Meme", "LD Meme", "Modern Problem Meme", "Monkey Puppet Meme", "Outstanding Move Meme", "Change My Mind Meme"]

# UI creation
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setFixedSize(1362, 875)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # "randomButton" is used for opening completely random images
        # or random images from the selected Meme category
        self.randomButton = QtWidgets.QPushButton(self.centralwidget)
        self.randomButton.setGeometry(QtCore.QRect(50, 60, 241, 91))
        font = QtGui.QFont()
        font.setPointSize(32)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setKerning(True)
        self.randomButton.setFont(font)
        self.randomButton.setObjectName("randomButton")
        self.randomButton.clicked.connect(self.showImage) # Connects "showImage" function to this button

        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(330, 20, 1011, 791))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")

        # "imageViewer" is used for displaying the image
        self.imageViewer = QtWidgets.QLabel(self.frame)
        self.imageViewer.setGeometry(QtCore.QRect(0, 0, 0, 0))
        self.imageViewer.setAlignment(QtCore.Qt.AlignCenter)
        self.imageViewer.setObjectName("imageViewer")

        # "comboBox" is used for selecting a Meme
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(60, 160, 221, 31))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItems(memeSelection)

        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    # used by PyQt5 
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.randomButton.setStatusTip(_translate("MainWindow", "Generate a random meme!"))
        self.randomButton.setText(_translate("MainWindow", "Random"))
        self.imageViewer.setText(_translate("MainWindow", "TextLabel"))

    # "showImage" funtion displays the image to the screen using the
    # "imageViewer" widget created above
    def showImage(self):
        imagePath = self.loadFromComboBoxImage()
        self.image = QPixmap(imagePath)
        self.resizeImage = self.image.scaled(800, 600, QtCore.Qt.KeepAspectRatio)
        self.imageViewer.setPixmap(self.resizeImage)
        self.imageViewer.adjustSize()
        self.imageViewer.setAlignment(QtCore.Qt.AlignCenter)

    # "loadFromComboBoxImage" function displays random images from the specified
    # Template using the "imageViewer" widget created above
    def loadFromComboBoxImage(self):
        if self.comboBox.currentIndex() == 1:
            self.i = rd.randint(0, len(brainMemeImages) - 1)
            self.selectedImagePath = brainMemeImages[self.i]
        elif self.comboBox.currentIndex() == 2:
            self.i = rd.randint(0, len(bambMemeImages) - 1)
            self.selectedImagePath = bambMemeImages[self.i]
        elif self.comboBox.currentIndex() == 3:
            self.i = rd.randint(0, len(buttonMemeImages) - 1)
            self.selectedImagePath = buttonMemeImages[self.i]
        elif self.comboBox.currentIndex() == 4:
            self.i = rd.randint(0, len(catMemeImages) - 1)
            self.selectedImagePath = catMemeImages[self.i]
        elif self.comboBox.currentIndex() == 5:
            self.i = rd.randint(0, len(disasterMemeImages) - 1)
            self.selectedImagePath = disasterMemeImages[self.i]
        elif self.comboBox.currentIndex() == 6:
            self.i = rd.randint(0, len(drakeMemeImages) - 1)
            self.selectedImagePath = drakeMemeImages[self.i]
        elif self.comboBox.currentIndex() == 7:
            self.i = rd.randint(0, len(ldMemeImages) - 1)
            self.selectedImagePath = ldMemeImages[self.i]
        elif self.comboBox.currentIndex() == 8:
            self.i = rd.randint(0, len(modernProbMemeImages) - 1)
            self.selectedImagePath = modernProbMemeImages[self.i]
        elif self.comboBox.currentIndex() == 9:
            self.i = rd.randint(0, len(monkeyMemeImages) - 1)
            self.selectedImagePath = monkeyMemeImages[self.i]
        elif self.comboBox.currentIndex() == 10:
            self.i = rd.randint(0, len(outstandingMemeImages) - 1)
            self.selectedImagePath = outstandingMemeImages[self.i]
        elif self.comboBox.currentIndex() == 11:
            self.i = rd.randint(0, len(changeMyMindMemeImages) - 1)
            self.selectedImagePath = changeMyMindMemeImages[self.i]
        else:
            self.i = rd.randint(1, 10)  # we set i as a random number so we can then influence the frequency of the images that will appear

            if self.i <= 5:
                self.n = rd.randint(0, 100)
            elif self.i > 5 and self.i <= 8:
                self.n = rd.randint(101, 200)
            elif self.i > 8 and self.i <= 10:
                self.n = rd.randint(201, 324)

            self.selectedImagePath = allImages[self.n]

        return self.selectedImagePath

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
